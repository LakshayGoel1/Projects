<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="categories_heading" xml:space="preserve">
    <value>Categories</value>
  </data>
  <data name="categories_th_runDate" xml:space="preserve">
    <value>RunDate</value>
  </data>
  <data name="categories_th_status" xml:space="preserve">
    <value>Status</value>
  </data>
  <data name="categories_th_testName" xml:space="preserve">
    <value>TestName</value>
  </data>
  <data name="dashboard_panel_label_others" xml:space="preserve">
    <value>others</value>
  </data>
  <data name="dashboard_panel_label_stepsFailed" xml:space="preserve">
    <value>step(s) failed</value>
  </data>
  <data name="dashboard_panel_label_stepsPassed" xml:space="preserve">
    <value>step(s) passed</value>
  </data>
  <data name="dashboard_panel_label_testsFailed" xml:space="preserve">
    <value>test(s) failed</value>
  </data>
  <data name="dashboard_panel_label_testsPassed" xml:space="preserve">
    <value>test(s) passed</value>
  </data>
  <data name="dashboard_panel_name_categories" xml:space="preserve">
    <value>Categories</value>
  </data>
  <data name="dashboard_panel_name_end" xml:space="preserve">
    <value>End</value>
  </data>
  <data name="dashboard_panel_name_environment" xml:space="preserve">
    <value>Environment</value>
  </data>
  <data name="dashboard_panel_name_passPercentage" xml:space="preserve">
    <value>Pass Percentage</value>
  </data>
  <data name="dashboard_panel_name_start" xml:space="preserve">
    <value>Start</value>
  </data>
  <data name="dashboard_panel_name_stepsView" xml:space="preserve">
    <value>StepsView</value>
  </data>
  <data name="dashboard_panel_name_testsView" xml:space="preserve">
    <value>Tests View</value>
  </data>
  <data name="dashboard_panel_name_totalSteps" xml:space="preserve">
    <value>TotalSteps</value>
  </data>
  <data name="dashboard_panel_name_totalTests" xml:space="preserve">
    <value>Total Tests</value>
  </data>
  <data name="dashboard_panel_name_totalTimeTaken" xml:space="preserve">
    <value>Total Time Taken</value>
  </data>
  <data name="dashboard_panel_th_name" xml:space="preserve">
    <value>Name</value>
  </data>
  <data name="dashboard_panel_th_param" xml:space="preserve">
    <value>Param</value>
  </data>
  <data name="dashboard_panel_th_value" xml:space="preserve">
    <value>Value</value>
  </data>
  <data name="head_copyrights" xml:space="preserve">
    <value>Copyrights licensed under the New BSD License</value>
  </data>
  <data name="head_documentation" xml:space="preserve">
    <value>Documentation</value>
  </data>
  <data name="head_library" xml:space="preserve">
    <value>Library</value>
  </data>
  <data name="head_metaDescription" xml:space="preserve">
    <value>ExtentReports (by Anshoo Arora) is a reporting library for automation testing for .NET and Java. It creates detailed and beautiful HTML reports for modern browsers. ExtentReports shows test and step summary along with dashboards, system and environment details for quick analysis of your tests.</value>
  </data>
  <data name="logs_heading" xml:space="preserve">
    <value>TestRunner Logs</value>
  </data>
  <data name="modal_button_save" xml:space="preserve">
    <value>Save</value>
  </data>
  <data name="modal_heading_selectStatus" xml:space="preserve">
    <value>Select Status</value>
  </data>
  <data name="modal_heading_testCount" xml:space="preserve">
    <value>Configure Tests Count Setting</value>
  </data>
  <data name="modal_selection_childTests" xml:space="preserve">
    <value>Child Tests Only</value>
  </data>
  <data name="modal_selection_parentTestOnly" xml:space="preserve">
    <value>Parent Tests Only (Does not include child nodes in counts)</value>
  </data>
  <data name="modal_selection_parentWithoutChildNodes" xml:space="preserve">
    <value>Parent Tests Without Child Tests + Child Tests</value>
  </data>
  <data name="nav_menuright_themeSelectorMessage" xml:space="preserve">
    <value>Click to toggle dark theme. To enable by default, use js configuration $('body').addClass('dark');</value>
  </data>
  <data name="nav_menu_analysis" xml:space="preserve">
    <value>Analysis</value>
  </data>
  <data name="nav_menu_categories" xml:space="preserve">
    <value>Categories</value>
  </data>
  <data name="nav_menu_exceptions" xml:space="preserve">
    <value>Exceptions</value>
  </data>
  <data name="nav_menu_testDetails" xml:space="preserve">
    <value>Test Details</value>
  </data>
  <data name="nav_menu_testRunnerLogs" xml:space="preserve">
    <value>TestRunner Logs</value>
  </data>
  <data name="status_fail" xml:space="preserve">
    <value>Fail</value>
  </data>
  <data name="status_info" xml:space="preserve">
    <value>Info</value>
  </data>
  <data name="status_pass" xml:space="preserve">
    <value>Pass</value>
  </data>
  <data name="status_skip" xml:space="preserve">
    <value>Skip</value>
  </data>
  <data name="status_unknown" xml:space="preserve">
    <value>Unknown</value>
  </data>
  <data name="status_warning" xml:space="preserve">
    <value>Warning</value>
  </data>
  <data name="tests_filters_clearFilters" xml:space="preserve">
    <value>Clear Filters</value>
  </data>
  <data name="tests_filters_enableDashboard" xml:space="preserve">
    <value>Enable Dashboard</value>
  </data>
  <data name="tests_filters_refreshCharts" xml:space="preserve">
    <value>Refresh Charts on Filters</value>
  </data>
  <data name="tests_filters_searchTests" xml:space="preserve">
    <value>Search Tests</value>
  </data>
  <data name="tests_test_info_testEndTime" xml:space="preserve">
    <value>Test ended time</value>
  </data>
  <data name="tests_test_info_testStartTime" xml:space="preserve">
    <value>Test started time</value>
  </data>
  <data name="tests_test_info_timeTaken" xml:space="preserve">
    <value>Time taken to finish</value>
  </data>
  <data name="tests_test_log_th_details" xml:space="preserve">
    <value>Details</value>
  </data>
  <data name="tests_test_log_th_status" xml:space="preserve">
    <value>Status</value>
  </data>
  <data name="tests_test_log_th_timestamp" xml:space="preserve">
    <value>Timestamp</value>
  </data>
  <data name="exceptions_heading" xml:space="preserve">
    <value>Exceptions</value>
  </data>
  <data name="exceptions_th_exception" xml:space="preserve">
    <value>Exception</value>
  </data>
  <data name="exceptions_th_runDate" xml:space="preserve">
    <value>Run Date</value>
  </data>
  <data name="exceptions_th_testName" xml:space="preserve">
    <value>Test Name</value>
  </data>
</root>